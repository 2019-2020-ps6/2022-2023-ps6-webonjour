// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime? @default(now())
}

enum DiseaseStage {
  STAGE_1
  STAGE_2
  STAGE_3
  STAGE_4
  STAGE_5
  STAGE_6
  STAGE_7
}

enum QuestionType {
  CHOICE
  REORDER
}

model Question {
  id      Int          @id @default(autoincrement())
  title   String
  image   String?
  answers Answer[]
  clues   Clue[]
  type    QuestionType
  quiz    Quiz         @relation(fields: [quizId], references: [id])
  quizId  Int
}

model Clue {
  id         Int      @id @default(autoincrement())
  text       String?
  image      String?
  question   Question @relation(fields: [questionId], references: [id])
  questionId Int
}

model Answer {
  id         Int      @id @default(autoincrement())
  text       String?
  image      String?
  isCorrect  Boolean
  question   Question @relation(fields: [questionId], references: [id])
  questionId Int
}

model Quiz {
  id        Int          @id @default(autoincrement())
  title     String
  imageUrl  String
  stage     DiseaseStage
  questions Question[]
  isPrivate Boolean
}

model Patient {
  id                String @id @default(uuid())
  first_name        String
  last_name         String
  age               Int
  profilePictureUrl String
  description       String

  diseasesStage Int
  lastQuizDate  DateTime
  floor         Int
}

model FamilyMember {
  id                String @id @default(uuid())
  first_name        String
  last_name         String
  age               Int
  profilePictureUrl String
  description       String

  relation  String
  patientId String?
  phone     String?
  email     String?
}

model Accomodation {
  id    String @id @default(uuid())
  title String
}
